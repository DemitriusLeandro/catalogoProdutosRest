package catalogo.api.repository;

import java.util.List;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import catalogo.api.model.Produtos;

@Repository
@Transactional
public interface ProdutosRepository extends CrudRepository<Produtos, Long> {

	@Query("select p from Produtos p "
			+ " where p.description like '%:vDescription%' "
			+ " or p.name like '%:vName%' "
			+ " and p.price >= :vMaxPrice "
			+ " and p.price <= :vMinPrice")  
	public List<Produtos> findSearchProducts(@Param("vDescription") String vDescription, 
			                                 @Param("vName") String vName,
			                                 @Param("vMaxPrice") Double vMaxPrice,
			                                 @Param("vMinPrice") Double vMinPrice);	
	
	
	
	@Query(value="SELECT count(*) as total FROM produtos p where v.id = :vId",nativeQuery = true)
	public Long getContaProdId(@Param("vId") Long vDvIdescription);
}


